@import url(https://fonts.googleapis.com/css?family=Montserrat:regular,500,600&display=swap&subset=cyrillic-ext);@import url(https://fonts.googleapis.com/css?family=Jura:regular,500,600&display=swap&subset=cyrillic-ext);@font-face{font-family:"AtomAlice";font-display:swap;src:url(../assets/font/AtomicAlice-Regular.woff) format("woff"),url(../assets/font/AtomicAlice-Regular.woff2) format("woff2");font-style:"regular";font-weight:"400"}*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}.slick-slide img,aside,footer,header,nav{display:block}html{font-size:14px}body,html{height:100%;width:100%;line-height:1;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:400}body{font:17px "Montserrat";background:#373737;color:#000}.container{max-width:1198px;margin:0 auto;padding:0 15px;-webkit-box-sizing:content-box;box-sizing:content-box}.header{position:fixed;width:100%;background:rgba(33,33,33,.8);z-index:10;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:18px 0}.header__column{-webkit-box-flex:1;-ms-flex:1 1 33.33333%;flex:1 1 33.33333%}.menu__item,.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}.menu__list{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.menu__item{margin-left:23px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu__item:first-child{margin-left:0}.menu__item:last-child{margin-left:35px}.menu__link{font-size:20px;font-weight:500;color:#fff}.menu__icon{width:23px;height:23px}.tuotown__wrapper,.user__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.user__list{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.user__item{margin-left:24px}.user__item:first-child{margin-left:0}.user__icon{width:23px;height:23px}.slick-list,.slick-slider{position:relative;display:block}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slider__item{max-width:100%;height:590px;position:relative}.slider__item::after{content:"";width:100%;height:100%;position:absolute;top:0;left:0;background:rgba(0,0,0,.26)}.slider__image{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.logo{position:relative}.logo__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;position:absolute;top:0;z-index:10;max-width:602px;height:100%;margin:0 auto}.logo__title{font:400 41px Jura,sans-serif;margin-bottom:24px}.logo__subtitle{font-size:19px;line-height:23px;max-width:447px;margin-bottom:39px}.logo__elem{position:absolute;width:100%;bottom:76px;z-index:10}.logo__elem-slider,.logo__elem-slider .slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex}.logo__elem-slider{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo__elem-slider .slick-dots{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.logo__elem-slider .slick-dots .slick-active button{background:#fff}.logo__elem-slider .slick-dots li{margin-right:26px}.logo__elem-slider .slick-dots li button{background:0 0;color:#fff;font-weight:600;font-size:15px;line-height:18px;width:19px;height:19px;border-radius:50%}.logo__elem-slider .slick-dots li:last-child{margin-right:0}.logo__elem-slider .slick-arrow{background:0 0;font-size:0;width:48px;height:48px;border-radius:50%;border:1px solid #ffffff32}.logo__elem-slider .slick-prev{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;background:url(../assets/img/icons/logo/prev.svg) center center/25px no-repeat}.logo__elem-slider .slick-next{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3;background:url(../assets/img/icons/logo/next.svg) center center/25px no-repeat}.button__logo{background:0 0;border:#c80000 2px solid;padding:16px 34px;border-radius:27px;text-transform:uppercase;font-style:14px;font-weight:600;color:#fff}@supports (-webkit-appearance:none){.logo__elem-slider .slick-prev{background:url(../assets/img/icons/logo/prev.svg) center center/25px no-repeat}.logo__elem-slider .slick-next{background:url(../assets/img/icons/logo/next.svg) center center/25px no-repeat}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */