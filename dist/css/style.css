@import url(https://fonts.googleapis.com/css?family=Montserrat:regular,500,600&display=swap&subset=cyrillic-ext);

@import url(https://fonts.googleapis.com/css?family=Jura:regular,500,600&display=swap&subset=cyrillic-ext);

@font-face {
  font-family: "AtomAlice";
  font-display: swap;
  src: url("../assets/font/AtomicAlice-Regular.woff") format("woff"), url("../assets/font/AtomicAlice-Regular.woff2") format("woff2");
  font-style: "regular";
  font-weight: "400";
}

* {
  padding: 0;
  margin: 0;
  border: 0;
}

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

:focus,
:active {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

nav,
footer,
header,
aside {
  display: block;
}

html,
body {
  height: 100%;
  width: 100%;
  font-size: 100%;
  line-height: 1;
  font-size: 14px;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

input,
button,
textarea {
  font-family: inherit;
}

input::-ms-clear {
  display: none;
}

button {
  cursor: pointer;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

a,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: 400;
}

body {
  font: 17px "Montserrat";
  background: #373737;
  color: #000;
}

.container {
  max-width: 1198px;
  margin: 0 auto;
  padding: 0 15px;
}

.header {
  position: relative;
  background: rgba(33, 33, 33, 0.8);
  z-index: 10;
}

.header__blur {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-filter: blur(11px);
  filter: blur(11px);
  z-index: -10;
}

.header__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 18px 0;
}

.header__column {
  -webkit-box-flex: 1;
  -ms-flex: 1 1 33.33333%;
  flex: 1 1 33.33333%;
}

.menu__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.menu__item {
  margin-left: 23px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.menu__item:first-child {
  margin-left: 0;
}

.menu__item:last-child {
  margin-left: 35px;
}

.menu__link {
  font-size: 20px;
  font-weight: 500;
  color: #ffffff;
}

.menu__icon {
  width: 23px;
  height: 23px;
}

.logo__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.user__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.user__item {
  margin-left: 24px;
}

.user__item:first-child {
  margin-left: 0;
}

.user__icon {
  width: 23px;
  height: 23px;
}

@supports (-webkit-appearance:none) {

}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */